// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';


function fst(param) {
  return param[0];
}

function snd(param) {
  return param[1];
}

function add(a, b) {
  if (a) {
    return add(a - 1 | 0, b) + 1 | 0;
  } else {
    return b;
  }
}

function mult(a, b) {
  if (a) {
    var n = a - 1 | 0;
    return add(mult(n, b), b);
  } else {
    return 0;
  }
}

function sub(a, b) {
  if (a) {
    var n = a - 1 | 0;
    if (b) {
      return sub(n, b - 1 | 0);
    } else {
      return a;
    }
  } else {
    return 0;
  }
}

function div_remainder(a, b, i, j) {
  if (a) {
    var n = a - 1 | 0;
    if (j) {
      var m = j - 1 | 0;
      return div_remainder(n, b, i, m);
    } else {
      return div_remainder(n, b, i + 1 | 0, b);
    }
  } else {
    return /* Pair */[
            i,
            j
          ];
  }
}

function div(a, b) {
  if (b) {
    var n = b - 1 | 0;
    return fst(div_remainder(a, n, 0, n));
  } else {
    return 0;
  }
}

function mod0(a, b) {
  if (b) {
    var n = b - 1 | 0;
    return sub(n, snd(div_remainder(a, n, 0, n)));
  } else {
    return 0;
  }
}

var one = 1;

var two = one + 1 | 0;

var three = two + 1 | 0;

var four = three + 1 | 0;

var five = four + 1 | 0;

var six = five + 1 | 0;

var seven = six + 1 | 0;

var eight = seven + 1 | 0;

var nine = eight + 1 | 0;

var ten = nine + 1 | 0;

var zero = 0;

exports.fst           = fst;
exports.snd           = snd;
exports.add           = add;
exports.mult          = mult;
exports.sub           = sub;
exports.div_remainder = div_remainder;
exports.div           = div;
exports.mod0          = mod0;
exports.zero          = zero;
exports.one           = one;
exports.two           = two;
exports.three         = three;
exports.four          = four;
exports.five          = five;
exports.six           = six;
exports.seven         = seven;
exports.eight         = eight;
exports.nine          = nine;
exports.ten           = ten;
/* No side effect */
